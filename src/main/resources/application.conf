# Service configuration

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"

  # Dead letters
  log-dead-letters = 10
  log-dead-letters-during-shutdown = off

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off

  http {
    # the client idle timeout have to smaller then host idle timeout
    client {
      idle-timeout = 3000s
      request-timeout = 3000s
    }
    server {
      idle-timeout = 3000s
      request-timeout = infinite
      parsing {
          max-content-length = infinite
      }
    }
    host-connection-pool {
      idle-timeout = 3000s
      client.idle-timeout = 3000s
      max-open-requests = 1024
      response-entity-subscription-timeout = 5000s
    }
  }

  actor {
    debug {
      # enable function of LoggingReceive, which is to log any received message at
      # DEBUG level
      receive = on

      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on

      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on

      # enable DEBUG logging of unhandled messages
      unhandled = on

      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = on
    }
  }
}

#########################################################################################
# Microservice configuration
#########################################################################################

sce {
  track {
    mapper {
      actor-system{
        name = "mapper"
        parallelFactor = 10
      }
      rest-server {
        protocol = "http" #available values: http or https
        endpoint = "0.0.0.0" # catch all
        port = 8007
        port = ${?MAPPER_PORT}
        auth {
          password = ${?SALT_COMMON_PASSWORD}
          username = ${?SALT_COMMON_USERNAME}
        }
        timeout-sec = 1800 #30min

        path {
          mapper-path = "track"
          mapper-ext = "mapper"
        }
      }
      smooks {
        request_timeout_mills = 5000
        config-files-path = "/tmp/mapper/config-files"
        config-files-path = ${?SMOOKS_CONFIG_HOME}
        clients {
          dac_de {
            protocol = "http" #available values: http or https
            endpoint = "localhost" # ex. 0.0.0.0 for "catch all"
            endpoint = ${?DAC_DE_SERVER}
            port = 8021
            port = ${?DAC_DE_PORT}
            path = "dac_de/get-config"
            password = ${?SALT_COMMON_PASSWORD}
            username = ${?SALT_COMMON_USERNAME}
          }
        }
      }
    }
  }
}
